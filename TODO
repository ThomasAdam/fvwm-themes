                      Things to do before 1.0.0
                      -------------------------

* localization using locale/LANG/ directories

* internationalization (translations)

* optimizing a reload needed for changes in components

* Test and port fvwm-themes to native BSD's and Solaris.
  There are problems for sure, mkdir without -p, no killall etc.

* Convert all hardcoded $FT_DATADIR/... paths to relative $./ .

* Fix a bug, when an option is removed, it is still here (due to 'current').
  The same if the option is added.

* Fix a problem when the current component (say used in old session) does
  not exist anymore. Probably write a warning (xmessage), not fatal error.

Optional items to do:
--------------------

* Think where belong all functions sitting in different components.

* Providing some ready to use functions for background@ components.
  Like functions dealing with image types and formats (tiles, gradients).

* A form/script/gtk for FvwmRearrange.

* A better web page. Does someone want to help on this?

* Better integration of fvwm-themes-xres.

* Creating fvwm-themes-gtk. Jos?

* Creating fvwm-themes-qt. Someone?

* settings@default: think which subcomponents to remove/move.

Ideas:
-----

* component's scalar property, which unlike options, where only values
  from a range (1 .. options) are accepted, can be freely set by a user.
  Examples of scalar types: Color, String, Minutes, Milliseconds etc.
  There should be individual editors for this scalar property.

* background-auto@ component (with a scalar of type Minutes), which will
  iterate over a background@ options randomly or sequencially every n minutes.

* introduce option-value/variant groups, which only affect presentation menus,
  not logic; for example it is possible to have 6 groups of variants, say,
  6 types of backgrounds. With inline=1 groups are simply delimited ("" Nop),
  with inline=0 there are 6 submenus of variants.

Problems without obvious soluton:
--------------------------------

* Rereading iconstyles/style-icon-miniicon file dynamically is not enough
  if someone (me) have icon style extentions. Should be solved using
  dependances somehow (using 'extends').
