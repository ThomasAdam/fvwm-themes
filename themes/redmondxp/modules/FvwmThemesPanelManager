#!/usr/bin/perl -w

# This module is intended to contol RedmondXP panel by changing
# its configuration dynamically.

use strict;
use lib `fvwm-config -p | tr -d '\n'`;
use FVWM::Module;
use General::FileSystem '-quiet';
use General::Parse;

# configuration variables
my $fullName = $0;
my $name = $fullName; $name =~ s|.*/||g;
my $configFile = ".$name.cfg";
my $config = {
	'taskbar-resolution' => 'page',
	'pager-show-single' => 0,
	'pager-show-desker' => 0,
};
my $newConfig = {};
my $pageButtonIndexes = [ 8, 9, 10, 11 ];
my $currPageNum = -1;  # support 4 pages 2x2
my $currDeskNum = 0;

my $module = new FVWM::Module(
	Name => $name,
	Mask => M_NEW_PAGE | M_NEW_DESK | M_STRING,
);

sub loadConfig () {
	my $textRef = loadFile($configFile);
	return unless defined $textRef;

	foreach (split(/\n/s, $$textRef)) {
		next unless /=/;
		my ($key, $value) = split(/=/, $_, 2);
		$newConfig->{$key} = $value;
	}
}

sub saveConfig () {
	my $text = "";
	foreach (sort keys %$config) {
		$text .= "$_=$config->{$_}\n";
	}
	saveFile($configFile, \$text);
}

sub applyNewConfig () {
	my $key;
	foreach $key (keys %$newConfig) {
		my $newValue = $newConfig->{$key};
		delete $newConfig->{$key};
		next if $newValue eq $config->{$key};
		$config->{$key} = $newValue;

		if ($key eq 'pager-show-single') {
			my $cmd = $newValue?
				"FvwmPager FvwmPager-Single":
				"KillModule FvwmPager FvwmPager-Single";
			$module->send($cmd);
		}
		if ($key eq 'pager-show-desker') {
			my $cmd = $newValue?
				"FvwmPager FvwmPager-Desker 0 3":
				"KillModule FvwmPager FvwmPager-Desker";
			$module->send($cmd);
		}
	}
	saveConfig();
}

sub popupPagerConfigMenu ($) {
	my $addition = shift;
	my $iconSSP = $config->{'pager-show-single'}? "choice-yes": "empty";
	my $iconSDP = $config->{'pager-show-desker'}? "choice-yes": "empty";
	my $iconGD0 = $currDeskNum == 0? "choice-yes": "empty";
	my $iconGD1 = $currDeskNum == 1? "choice-yes": "empty";
	my $iconGD2 = $currDeskNum == 2? "choice-yes": "empty";
	my $iconGD3 = $currDeskNum == 3? "choice-yes": "empty";
	my $backCmd = "SendToModule $fullName";

	$module->send(qq{
		DestroyMenu PanelPagerConfigMenu
		AddToMenu   PanelPagerConfigMenu
		+ "%menu/$iconSSP.xpm%Show Single Pager" $backCmd toggle pager-show-single
		+ "%menu/$iconSDP.xpm%Show Desker Pager" $backCmd toggle pager-show-desker
		+ "" Nop
		+ "%menu/$iconGD0.xpm%Goto Desk 0" GotoDesk 0 0
		+ "%menu/$iconGD1.xpm%Goto Desk 1" GotoDesk 0 1
		+ "%menu/$iconGD2.xpm%Goto Desk 2" GotoDesk 0 2
		+ "%menu/$iconGD3.xpm%Goto Desk 3" GotoDesk 0 3

		Popup PanelPagerConfigMenu $addition
	});
}

# ----------------------------------------------------------------------------
# main

loadConfig();
applyNewConfig();

$module->addHandler(M_NEW_PAGE, sub {
	my ($self, $type, @args) = @_;
	my ($x0, $y0, $desk, $width, $height) = @args;

	my $page_nx = int($x0 / $width);
	my $page_ny = int($y0 / $height);
	my $pageNum = $page_nx + $page_ny * 2;
	return if $pageNum == $currPageNum;

	if ($currPageNum != -1) {
		my $currPageButtonIndex = $pageButtonIndexes->[$currPageNum];
		$module->send("SendToModule FvwmButtons-Panel Title "
			. "$currPageButtonIndex " . ($currPageNum + 1));
	}

	$pageNum = -1 if $pageNum < 0 || $pageNum >= 4;
	$currPageNum = $pageNum;

	if ($pageNum != -1) {
		my $pageButtonIndex = $pageButtonIndexes->[$pageNum];
		$module->send("SendToModule FvwmButtons-Panel Title "
			. "$pageButtonIndex " . ($pageNum + 1) . "*");
	}
});

$module->addHandler(M_NEW_DESK, sub {
	my ($self, $type, @args) = @_;
	$currDeskNum = $args[0];
});

$module->addHandler(M_STRING, sub {
	my ($self, $type, @args) = @_;
	my $string = $args[3];

	my $action = cutToken(\$string);
	if ($action eq 'toggle') {
		my $key = getToken($string);
		return unless exists $config->{$key};
		$newConfig->{$key} = !$config->{$key};
		applyNewConfig();
	}
	elsif ($action eq 'popup') {
		my $menu = cutToken(\$string);
		if ($menu eq 'pager-config') {
			popupPagerConfigMenu($string);
		}
	}
});

$module->eventLoop;
